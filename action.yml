name: Setup Alpine Linux environment
description: >
  Set up a chroot-based Alpine Linux environment and optionally QEMU user emulator for non-x86 architectures.
author: Jakub Jirutka
branding:
  color: blue
  icon: terminal
inputs:
  apk-tools-url:
    description: >
      URL of the apk-tools static binary to use. It must end with `#!sha256!` followed by a SHA-256
      hash of the file.
      This should normally be left at the default value.
    required: false
    default: ''
  arch:
    description: >
      CPU architecture to emulate using QEMU. Allowed values are: `x86_64` (native on x86_64),
      `x86` (native on x86_64), `aarch64` (native on aarch64), `armhf` (armv6 with hard-float;
      native on aarch64), `armv7` (native on aarch64), `loongarch64` (available since v3.21),
      `ppc64le`, `riscv64` (available since v3.20), `s390x`, or the empty string to use the
      runner's native architecture.
    required: false
    default: ''
  branch:
    description: Alpine branch (aka release) to install (e.g. `v3.15`, `latest-stable`, `edge`).
    required: false
    default: latest-stable
  extra-keys:
    description: >
      A list of paths of additional trusted keys (for installing packages from the
      extra-repositories) to copy into /etc/apk/keys/. The paths should be relative to the
      workspace directory (the default location of your repository when using the checkout action).
    required: false
    default: ''
  extra-repositories:
    description: >
      A list of additional Alpine repositories to add into /etc/apk/repositories (Alpine's official
      main and community repositories are always added).
    required: false
    default: ''
  mirror-url:
    description: URL of an Alpine Linux mirror to fetch packages from.
    required: false
    default: http://dl-cdn.alpinelinux.org/alpine
  packages:
    description: A list of Alpine packages to install.
    required: false
    default: ''
  shell-name:
    description: >
      Name of the script to run `sh` in the Alpine chroot that will be added to `GITHUB_PATH`.
      This name should be used in `jobs.<job_id>.steps[*].shell` (e.g. `shell: alpine.sh {0}`) to
      run the step's script in the chroot.
    required: false
    default: alpine.sh
  volumes:
    description: >
      A list of directories on the host system to mount bind into the chroot. You can specify the
      source and destination path: `<src-dir>:<dest-dir>``. The `<src-dir>` is an absolute path of
      existing directory on the host system, `<dest-dir>` is an absolute path in the chroot
      (it will be created if doesn't exist). You can omit the latter if they're the same.

      Please note that /home/runner/work (where's your workspace located) is always mounted,
      don't specify it here.
    required: false
    default: ''
outputs:
  root-path:
    description: >
      Path to the created Alpine root directory (also exposed in environment
      variable ALPINE_ROOT_PATH).
    value: ${{ steps.setup.outputs.root-path }}

runs:
  using: composite
  steps:
    - id: setup
      env:
        INPUT_APK_TOOLS_URL: ${{ inputs.apk-tools-url }}
        INPUT_ARCH: ${{ inputs.arch }}
        INPUT_BRANCH: ${{ inputs.branch }}
        INPUT_EXTRA_KEYS: ${{ inputs.extra-keys }}
        INPUT_EXTRA_REPOSITORIES: ${{ inputs.extra-repositories }}
        INPUT_MIRROR_URL: ${{ inputs.mirror-url }}
        INPUT_PACKAGES: ${{ inputs.packages }}
        INPUT_SHELL_NAME: ${{ inputs.shell-name }}
        INPUT_VOLUMES: ${{ inputs.volumes }}
      run: sudo -E ./setup-alpine.sh
      working-directory: ${{ github.action_path }}
      shell: bash

    - uses: webiny/action-post-run@3.1.0
      with:
        run: sudo "${{ steps.setup.outputs.root-path }}"/destroy.sh
